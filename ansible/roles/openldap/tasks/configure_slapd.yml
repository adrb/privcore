---

- name: hashing admin password with SSHA
  shell: slappasswd -h "{SSHA}" -s "{{ldap_config.adminpw}}"
  changed_when: false
  register: _adminpwhash

- name: creating variable ldap_adminpw_hash
  set_fact:
    ldap_adminpw_hash: "{{_adminpwhash.stdout_lines[0]}}"

- name: Performing OLC configuration
  shell: |
    ldapmodify -c -a -Y EXTERNAL -Q -H ldapi:/// <<EOF
    {{ lookup('template', 'olc_config.ldif.j2') }}
    EOF
    :
  args:
    executable: /bin/bash
  register: olc_result

#- debug: msg="{{olc_result.rc}}" # {{olc_result.stdout_lines | join('\n') }}"

- name: Importing schemas
  shell: ldapmodify -c -a -Y EXTERNAL -Q -H ldapi:/// < "/etc/ldap/schema/{{item}}"
  register: schema_result
  failed_when: schema_result.rc != 0 and schema_result.rc != 80 # 80 mean "Duplicate attributeType"
  changed_when: schema_result.rc != 80
  with_items:
    - misc.ldif

#- name: Generating LDAP tree file to /tmp/tree.ldif
#  when: ansible_fqdn in groups['pds']
#  template: src=tree.ldif.j2 dest=/tmp/tree.ldif

- name: Populating LDAP tree
  shell: |
    ldapmodify -c -a -x -D "cn=admin,{{ldap_config.suffix}}" -w "{{ldap_config.adminpw}}" -H ldapi:/// <<EOF
    {{ lookup('template', 'tree.ldif.j2') }} 
    EOF
    :
  args:
    executable: /bin/bash
  register: tree_result
  failed_when: tree_result.rc != 0 and tree_result.rc != 68 # 68 mean "already exists"
  changed_when: tree_result.rc != 68

#- name: Generating /tmp/ssl.ldif file
#  template: src=olc_config_ssl.ldif.j2 dest=/tmp/ssl.ldif

- name: setting ACL to /etc/ssl/private for user openldap
  acl: name=/etc/ssl/private entity=openldap etype=user permissions="X" state=present

- name: setting ACL to /etc/ssl/private/{{ansible_fqdn}}_key.pem for user openldap
  acl: name=/etc/ssl/private/{{ansible_fqdn}}_key.pem entity=openldap etype=user permissions="r" state=present

- name: Enable SSL support
  lineinfile: dest=/etc/default/slapd regexp='^SLAPD_SERVICES=' line='SLAPD_SERVICES="ldap://127.0.0.1:389/ ldaps:/// ldapi:///"'
  notify:
    - restart ldapd

- name: forcing slapd restart before SSL configuration
  meta: flush_handlers

- name: Configure SSL support
  shell: |
    ldapmodify -c -a -Y EXTERNAL -Q -H ldapi:/// <<EOF
    {{ lookup('template', 'olc_config_ssl.ldif.j2') }} 
    EOF
    :
  args:
    executable: /bin/bash
  register: olc_ssl_result

- name: mark slapd to start on boot
  service: name=slapd enabled=yes

